import { WEBSOCKET_PROVIDER_ID } from './subscriptions';
import isElectron from './utils/is_electron';
const isTranslateMode = window.__ALTAIR_TRANSLATE__;
export class AltairConfig {
    constructor({ endpointURL, subscriptionsEndpoint, initialQuery, initialHeaders, initialEnvironments, initialVariables, initialPreRequestScript, initialPostRequestScript = '', instanceStorageNamespace, initialSettings, initialSubscriptionsProvider = WEBSOCKET_PROVIDER_ID, initialSubscriptionsPayload = {}, initialHttpMethod = 'POST', preserveState = true, initialWindows = [], } = {}) {
        this.donation = {
            url: 'https://opencollective.com/altair/donate',
            action_count_threshold: 50
        };
        this.ga = 'UA-41432833-6';
        this.add_query_depth_limit = 3;
        this.tab_size = 2;
        this.max_windows = isElectron ? 50 : 15;
        this.default_language = isTranslateMode ? 'ach-UG' : 'en-US';
        this.languages = {
            'en-US': 'English',
            'fr-FR': 'French',
            'es-ES': 'EspaÃ±ol',
            'cs-CZ': 'Czech',
            'de-DE': 'German',
            'pt-BR': 'Brazilian',
            'ru-RU': 'Russian',
            'uk-UA': 'Ukrainian',
            'zh-CN': 'Chinese Simplified',
            'ja-JP': 'Japanese',
            'sr-SP': 'Serbian',
            'it-IT': 'Italian',
            'pl-PL': 'Polish',
            'ko-KR': 'Korean',
            'ro-RO': 'Romanian',
            'vi-VN': 'Vietnamese',
        };
        this.query_history_depth = isElectron ? 100 : 15;
        this.defaultTheme = 'system';
        this.themes = ['light', 'dark', 'dracula', 'system'];
        this.isTranslateMode = isTranslateMode;
        this.isWebApp = window.__ALTAIR_WEB_APP__;
        this.initialData = {
            url: '',
            subscriptionsEndpoint: '',
            query: '',
            variables: '',
            // Force type of header, since initial value inference is wrong
            headers: null,
            environments: {},
            preRequestScript: '',
            postRequestScript: '',
            instanceStorageNamespace: 'altair_',
            settings: undefined,
            initialSubscriptionsProvider: undefined,
            initialSubscriptionsPayload: {},
            initialHttpMethod: 'POST',
            preserveState: true,
            windows: [],
        };
        this.initialData.url = window.__ALTAIR_ENDPOINT_URL__ || endpointURL || '';
        this.initialData.subscriptionsEndpoint = window.__ALTAIR_SUBSCRIPTIONS_ENDPOINT__ || subscriptionsEndpoint || '';
        this.initialData.query = window.__ALTAIR_INITIAL_QUERY__ || initialQuery || '';
        this.initialData.variables = window.__ALTAIR_INITIAL_VARIABLES__ || initialVariables || '';
        this.initialData.headers = window.__ALTAIR_INITIAL_HEADERS__ || initialHeaders || '';
        this.initialData.environments = initialEnvironments || {};
        this.initialData.preRequestScript = window.__ALTAIR_INITIAL_PRE_REQUEST_SCRIPT__ || initialPreRequestScript || '';
        this.initialData.postRequestScript = initialPostRequestScript;
        this.initialData.instanceStorageNamespace = window.__ALTAIR_INSTANCE_STORAGE_NAMESPACE__ || instanceStorageNamespace || 'altair_';
        this.initialData.settings = initialSettings;
        this.initialData.initialSubscriptionsProvider = initialSubscriptionsProvider;
        this.initialData.initialSubscriptionsPayload = initialSubscriptionsPayload;
        this.initialData.initialHttpMethod = initialHttpMethod;
        this.initialData.preserveState = preserveState;
        this.initialData.windows = initialWindows;
    }
}
let config = new AltairConfig();
export const setAltairConfig = (_config) => {
    config = _config;
};
export const getAltairConfig = () => {
    return config;
};
window.getAltairConfig = getAltairConfig;
